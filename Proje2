import pandas as pd
from google.colab import drive
drive.mount("/content/drive")
import numpy as np
x_train = np.load("/content/drive/MyDrive/Proje/data.npy")
y_train = np.load("/content/drive/MyDrive/Proje/data2.npy")
x_test = np.load("/content/drive/MyDrive/Proje/data3.npy")
y_test = np.load("/content/drive/MyDrive/Proje/data4.npy")
x_val = np.load("/content/drive/MyDrive/Proje/data5.npy")
y_val = np.load("/content/drive/MyDrive/Proje/data6.npy")
import tensorflow as tf
model =tf.keras.Sequential()
model.add(tf.keras.layers.Conv2D(64,(3,3),1,activation="relu", input_shape=(24,32,3)))
model.add(tf.keras.layers.MaxPooling2D())
model.add(tf.keras.layers.Conv2D(64,(3,3),1,activation="relu"))
model.add(tf.keras.layers.MaxPooling2D())
model.add(tf.keras.layers.Conv2D(64,(3,3),1,activation="relu"))
model.add(tf.keras.layers.MaxPooling2D())
model.add(tf.keras.layers.Flatten())
model.add(tf.keras.layers.Dense(256,activation="relu")) 
model.add(tf.keras.layers.Dense(1,activation="softmax")) 
model.compile(optimizer="adam",
              loss = "sparse_categorical_crossentropy",
              metrics = ["accuracy"])
results= model.fit(x_train, y_train, epochs=30, validation_data=(x_val, y_val))
plt.plot(results.history["accuracy"], label ="accuracy")
plt.plot(results.history["val_accuracy"], label ="val_accuracy")
plt.xlabel("Epoch")
plt.ylabel("Accuracy")
plt.legend()
plt.show()
model.evaluate(x_test, y_test)
prediction_result=model.predict(x_test[1].reshape(1,24,32,3))
prediction_result
